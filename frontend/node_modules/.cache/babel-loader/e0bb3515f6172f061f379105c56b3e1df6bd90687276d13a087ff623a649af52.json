{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web_Development_ReactJS_Expert\\\\student-management-system\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n// src/pages/LoginPage.js\nimport React, { useState } from 'react';\nimport { useAuth } from '../hooks/useAuth';\nimport { useNotifications } from '../hooks/useNotifications';\nimport { LoginForm } from '../components/auth/LoginForm'; // Assuming LoginForm is a separate component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const {\n    login\n  } = useAuth();\n  const {\n    addNotification\n  } = useNotifications();\n  const [loading, setLoading] = useState(false);\n  const handleLogin = async credentials => {\n    setLoading(true);\n    try {\n      await login(credentials);\n      addNotification({\n        type: 'success',\n        message: 'Login successful! Redirecting...'\n      });\n      // The redirect is handled by the router which sees isAuthenticated is now true\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.msg) || 'Login failed. Please check your credentials.';\n      addNotification({\n        type: 'error',\n        message: errorMessage\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoginForm, {\n    onSubmit: handleLogin,\n    loading: loading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n_s(LoginPage, \"ZdGxbEZZQF/oBJ1TVJh9fmBWXM0=\", false, function () {\n  return [useAuth, useNotifications];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useAuth","useNotifications","LoginForm","jsxDEV","_jsxDEV","LoginPage","_s","login","addNotification","loading","setLoading","handleLogin","credentials","type","message","error","_error$response","_error$response$data","errorMessage","response","data","msg","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Web_Development_ReactJS_Expert/student-management-system/frontend/src/pages/LoginPage.js"],"sourcesContent":["// src/pages/LoginPage.js\r\nimport React, { useState } from 'react';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport { useNotifications } from '../hooks/useNotifications';\r\nimport { LoginForm } from '../components/auth/LoginForm'; // Assuming LoginForm is a separate component\r\n\r\nconst LoginPage = () => {\r\n  const { login } = useAuth();\r\n  const { addNotification } = useNotifications();\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  const handleLogin = async (credentials) => {\r\n    setLoading(true);\r\n    try {\r\n      await login(credentials);\r\n      addNotification({ type: 'success', message: 'Login successful! Redirecting...' });\r\n      // The redirect is handled by the router which sees isAuthenticated is now true\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.msg || 'Login failed. Please check your credentials.';\r\n      addNotification({ type: 'error', message: errorMessage });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return <LoginForm onSubmit={handleLogin} loading={loading} />;\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,SAAS,QAAQ,8BAA8B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAM,CAAC,GAAGP,OAAO,CAAC,CAAC;EAC3B,MAAM;IAAEQ;EAAgB,CAAC,GAAGP,gBAAgB,CAAC,CAAC;EAC9C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMY,WAAW,GAAG,MAAOC,WAAW,IAAK;IACzCF,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMH,KAAK,CAACK,WAAW,CAAC;MACxBJ,eAAe,CAAC;QAAEK,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAmC,CAAC,CAAC;MACjF;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACd,MAAMC,YAAY,GAAG,EAAAF,eAAA,GAAAD,KAAK,CAACI,QAAQ,cAAAH,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBI,IAAI,cAAAH,oBAAA,uBAApBA,oBAAA,CAAsBI,GAAG,KAAI,8CAA8C;MAChGb,eAAe,CAAC;QAAEK,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEI;MAAa,CAAC,CAAC;IAC3D,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBAAON,OAAA,CAACF,SAAS;IAACoB,QAAQ,EAAEX,WAAY;IAACF,OAAO,EAAEA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/D,CAAC;AAACpB,EAAA,CApBID,SAAS;EAAA,QACKL,OAAO,EACGC,gBAAgB;AAAA;AAAA0B,EAAA,GAFxCtB,SAAS;AAsBf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}