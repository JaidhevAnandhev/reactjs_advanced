{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web_Development_ReactJS_Expert\\\\student-management-system\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, {\n    user: null,\n    token: null,\n    isAuthenticated: false,\n    loading: false,\n    error: null\n  });\n\n  // Check for existing token on mount\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    if (token && user) {\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          token,\n          user: JSON.parse(user)\n        }\n      });\n    }\n  }, []);\n  const login = async credentials => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      // Call backend API\n      const response = await axios.post('http://localhost:5000/login', credentials);\n      const {\n        user,\n        access_token\n      } = response.data;\n      localStorage.setItem('token', access_token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user,\n          token: access_token\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.msg) || error.message || 'Login failed';\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n\n      // Mock API call - replace with actual API\n      const response = await new Promise(resolve => {\n        setTimeout(() => {\n          resolve({\n            data: {\n              user: {\n                id: Date.now(),\n                name: userData.name,\n                email: userData.email\n              },\n              token: 'mock-jwt-token-' + Date.now()\n            }\n          });\n        }, 1000);\n      });\n      const {\n        user,\n        token\n      } = response.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user,\n          token\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message || 'Registration failed';\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n  const clearError = () => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      ...state,\n      login,\n      register,\n      logout,\n      clearError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"xWXiZ0EXOgyX6zBCDWVIYpI2tZU=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport { AuthContext };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","authReducer","state","action","type","user","payload","token","isAuthenticated","loading","error","AuthProvider","children","_s","dispatch","localStorage","getItem","JSON","parse","login","credentials","response","post","access_token","data","setItem","stringify","success","_error$response","_error$response$data","errorMessage","msg","message","register","userData","Promise","resolve","setTimeout","id","Date","now","name","email","_error$response2","_error$response2$data","logout","removeItem","clearError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/Web_Development_ReactJS_Expert/student-management-system/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case 'LOGIN_FAILURE':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case 'SET_LOADING':\r\n      return { ...state, loading: action.payload };\r\n    case 'CLEAR_ERROR':\r\n      return { ...state, error: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, {\r\n    user: null,\r\n    token: null,\r\n    isAuthenticated: false,\r\n    loading: false,\r\n    error: null,\r\n  });\r\n\r\n  // Check for existing token on mount\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const user = localStorage.getItem('user');\r\n    \r\n    if (token && user) {\r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: {\r\n          token,\r\n          user: JSON.parse(user),\r\n        },\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      dispatch({ type: 'SET_LOADING', payload: true });\r\n      // Call backend API\r\n      const response = await axios.post('http://localhost:5000/login', credentials);\r\n      const { user, access_token } = response.data;\r\n      localStorage.setItem('token', access_token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      dispatch({ type: 'LOGIN_SUCCESS', payload: { user, token: access_token } });\r\n      return { success: true };\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.msg || error.message || 'Login failed';\r\n      dispatch({ type: 'LOGIN_FAILURE', payload: errorMessage });\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      dispatch({ type: 'SET_LOADING', payload: true });\r\n      \r\n      // Mock API call - replace with actual API\r\n      const response = await new Promise((resolve) => {\r\n        setTimeout(() => {\r\n          resolve({\r\n            data: {\r\n              user: { id: Date.now(), name: userData.name, email: userData.email },\r\n              token: 'mock-jwt-token-' + Date.now(),\r\n            },\r\n          });\r\n        }, 1000);\r\n      });\r\n\r\n      const { user, token } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      dispatch({ type: 'LOGIN_SUCCESS', payload: { user, token } });\r\n      return { success: true };\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || error.message || 'Registration failed';\r\n      dispatch({ type: 'LOGIN_FAILURE', payload: errorMessage });\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    dispatch({ type: 'LOGOUT' });\r\n  };\r\n\r\n  const clearError = () => {\r\n    dispatch({ type: 'CLEAR_ERROR' });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      ...state,\r\n      login,\r\n      register,\r\n      logout,\r\n      clearError,\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport { AuthContext };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}