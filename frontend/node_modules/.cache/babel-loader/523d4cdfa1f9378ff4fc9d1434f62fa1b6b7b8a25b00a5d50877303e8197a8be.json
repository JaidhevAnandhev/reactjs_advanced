{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\n// src/hooks/useStudentQueries.js\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport * as api from '../services/api';\nexport const useGetStudents = (page, filters) => {\n  _s();\n  return useQuery({\n    queryKey: ['students', page, filters],\n    // Caching key\n    queryFn: () => api.getStudents(page, 10, filters),\n    keepPreviousData: true // Prevents UI flicker on pagination\n  });\n};\n_s(useGetStudents, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useCreateStudent = () => {\n  _s2();\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: api.createStudent,\n    onSuccess: () => {\n      // When a student is created, invalidate the students query to refetch data\n      queryClient.invalidateQueries({\n        queryKey: ['students']\n      });\n    }\n  });\n};\n_s2(useCreateStudent, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\nexport const useUpdateStudent = () => {\n  _s3();\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: api.updateStudent,\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['students']\n      });\n    }\n  });\n};\n_s3(useUpdateStudent, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\nexport const useDeleteStudent = () => {\n  _s4();\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: api.deleteStudent,\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['students']\n      });\n    }\n  });\n};\n_s4(useDeleteStudent, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});","map":{"version":3,"names":["useQuery","useMutation","useQueryClient","api","useGetStudents","page","filters","_s","queryKey","queryFn","getStudents","keepPreviousData","useCreateStudent","_s2","queryClient","mutationFn","createStudent","onSuccess","invalidateQueries","useUpdateStudent","_s3","updateStudent","useDeleteStudent","_s4","deleteStudent"],"sources":["D:/Web_Development_ReactJS_Expert/student-management-system/frontend/src/hooks/useStudents.js"],"sourcesContent":["// src/hooks/useStudentQueries.js\r\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport * as api from '../services/api';\r\n\r\nexport const useGetStudents = (page, filters) => {\r\n  return useQuery({\r\n    queryKey: ['students', page, filters], // Caching key\r\n    queryFn: () => api.getStudents(page, 10, filters),\r\n    keepPreviousData: true, // Prevents UI flicker on pagination\r\n  });\r\n};\r\n\r\nexport const useCreateStudent = () => {\r\n  const queryClient = useQueryClient();\r\n  return useMutation({\r\n    mutationFn: api.createStudent,\r\n    onSuccess: () => {\r\n      // When a student is created, invalidate the students query to refetch data\r\n      queryClient.invalidateQueries({ queryKey: ['students'] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useUpdateStudent = () => {\r\n  const queryClient = useQueryClient();\r\n  return useMutation({\r\n    mutationFn: api.updateStudent,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['students'] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useDeleteStudent = () => {\r\n    const queryClient = useQueryClient();\r\n    return useMutation({\r\n        mutationFn: api.deleteStudent,\r\n        onSuccess: () => {\r\n            queryClient.invalidateQueries({ queryKey: ['students'] });\r\n        },\r\n    });\r\n};\r\n"],"mappings":";;;;AAAA;AACA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,cAAc,QAAQ,uBAAuB;AAC7E,OAAO,KAAKC,GAAG,MAAM,iBAAiB;AAEtC,OAAO,MAAMC,cAAc,GAAGA,CAACC,IAAI,EAAEC,OAAO,KAAK;EAAAC,EAAA;EAC/C,OAAOP,QAAQ,CAAC;IACdQ,QAAQ,EAAE,CAAC,UAAU,EAAEH,IAAI,EAAEC,OAAO,CAAC;IAAE;IACvCG,OAAO,EAAEA,CAAA,KAAMN,GAAG,CAACO,WAAW,CAACL,IAAI,EAAE,EAAE,EAAEC,OAAO,CAAC;IACjDK,gBAAgB,EAAE,IAAI,CAAE;EAC1B,CAAC,CAAC;AACJ,CAAC;AAACJ,EAAA,CANWH,cAAc;EAAA,QAClBJ,QAAQ;AAAA;AAOjB,OAAO,MAAMY,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACpC,MAAMC,WAAW,GAAGZ,cAAc,CAAC,CAAC;EACpC,OAAOD,WAAW,CAAC;IACjBc,UAAU,EAAEZ,GAAG,CAACa,aAAa;IAC7BC,SAAS,EAAEA,CAAA,KAAM;MACf;MACAH,WAAW,CAACI,iBAAiB,CAAC;QAAEV,QAAQ,EAAE,CAAC,UAAU;MAAE,CAAC,CAAC;IAC3D;EACF,CAAC,CAAC;AACJ,CAAC;AAACK,GAAA,CATWD,gBAAgB;EAAA,QACPV,cAAc,EAC3BD,WAAW;AAAA;AASpB,OAAO,MAAMkB,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACpC,MAAMN,WAAW,GAAGZ,cAAc,CAAC,CAAC;EACpC,OAAOD,WAAW,CAAC;IACjBc,UAAU,EAAEZ,GAAG,CAACkB,aAAa;IAC7BJ,SAAS,EAAEA,CAAA,KAAM;MACfH,WAAW,CAACI,iBAAiB,CAAC;QAAEV,QAAQ,EAAE,CAAC,UAAU;MAAE,CAAC,CAAC;IAC3D;EACF,CAAC,CAAC;AACJ,CAAC;AAACY,GAAA,CARWD,gBAAgB;EAAA,QACPjB,cAAc,EAC3BD,WAAW;AAAA;AAQpB,OAAO,MAAMqB,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAClC,MAAMT,WAAW,GAAGZ,cAAc,CAAC,CAAC;EACpC,OAAOD,WAAW,CAAC;IACfc,UAAU,EAAEZ,GAAG,CAACqB,aAAa;IAC7BP,SAAS,EAAEA,CAAA,KAAM;MACbH,WAAW,CAACI,iBAAiB,CAAC;QAAEV,QAAQ,EAAE,CAAC,UAAU;MAAE,CAAC,CAAC;IAC7D;EACJ,CAAC,CAAC;AACN,CAAC;AAACe,GAAA,CARWD,gBAAgB;EAAA,QACLpB,cAAc,EAC3BD,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}